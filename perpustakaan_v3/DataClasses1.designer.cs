#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace perpustakaan_v3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Perpustakaan")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPinjam(Pinjam instance);
    partial void UpdatePinjam(Pinjam instance);
    partial void DeletePinjam(Pinjam instance);
    partial void InsertAkun(Akun instance);
    partial void UpdateAkun(Akun instance);
    partial void DeleteAkun(Akun instance);
    partial void InsertBuku(Buku instance);
    partial void UpdateBuku(Buku instance);
    partial void DeleteBuku(Buku instance);
    partial void InsertKategori(Kategori instance);
    partial void UpdateKategori(Kategori instance);
    partial void DeleteKategori(Kategori instance);
    partial void InsertPenuli(Penuli instance);
    partial void UpdatePenuli(Penuli instance);
    partial void DeletePenuli(Penuli instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::perpustakaan_v3.Properties.Settings.Default.PerpustakaanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Pinjam> Pinjams
		{
			get
			{
				return this.GetTable<Pinjam>();
			}
		}
		
		public System.Data.Linq.Table<Akun> Akuns
		{
			get
			{
				return this.GetTable<Akun>();
			}
		}
		
		public System.Data.Linq.Table<Buku> Bukus
		{
			get
			{
				return this.GetTable<Buku>();
			}
		}
		
		public System.Data.Linq.Table<Kategori> Kategoris
		{
			get
			{
				return this.GetTable<Kategori>();
			}
		}
		
		public System.Data.Linq.Table<Penuli> Penulis
		{
			get
			{
				return this.GetTable<Penuli>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pinjam")]
	public partial class Pinjam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _buku_id;
		
		private int _akun_id;
		
		private System.DateTime _tanggal_pinjam;
		
		private System.Nullable<System.DateTime> _tanggal_pengembalian;
		
		private string _total_bayar;
		
		private EntityRef<Akun> _Akun;
		
		private EntityRef<Buku> _Buku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onbuku_idChanging(int value);
    partial void Onbuku_idChanged();
    partial void Onakun_idChanging(int value);
    partial void Onakun_idChanged();
    partial void Ontanggal_pinjamChanging(System.DateTime value);
    partial void Ontanggal_pinjamChanged();
    partial void Ontanggal_pengembalianChanging(System.Nullable<System.DateTime> value);
    partial void Ontanggal_pengembalianChanged();
    partial void Ontotal_bayarChanging(string value);
    partial void Ontotal_bayarChanged();
    #endregion
		
		public Pinjam()
		{
			this._Akun = default(EntityRef<Akun>);
			this._Buku = default(EntityRef<Buku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buku_id", DbType="Int NOT NULL")]
		public int buku_id
		{
			get
			{
				return this._buku_id;
			}
			set
			{
				if ((this._buku_id != value))
				{
					if (this._Buku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbuku_idChanging(value);
					this.SendPropertyChanging();
					this._buku_id = value;
					this.SendPropertyChanged("buku_id");
					this.Onbuku_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_akun_id", DbType="Int NOT NULL")]
		public int akun_id
		{
			get
			{
				return this._akun_id;
			}
			set
			{
				if ((this._akun_id != value))
				{
					if (this._Akun.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onakun_idChanging(value);
					this.SendPropertyChanging();
					this._akun_id = value;
					this.SendPropertyChanged("akun_id");
					this.Onakun_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tanggal_pinjam", DbType="Date NOT NULL")]
		public System.DateTime tanggal_pinjam
		{
			get
			{
				return this._tanggal_pinjam;
			}
			set
			{
				if ((this._tanggal_pinjam != value))
				{
					this.Ontanggal_pinjamChanging(value);
					this.SendPropertyChanging();
					this._tanggal_pinjam = value;
					this.SendPropertyChanged("tanggal_pinjam");
					this.Ontanggal_pinjamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tanggal_pengembalian", DbType="Date")]
		public System.Nullable<System.DateTime> tanggal_pengembalian
		{
			get
			{
				return this._tanggal_pengembalian;
			}
			set
			{
				if ((this._tanggal_pengembalian != value))
				{
					this.Ontanggal_pengembalianChanging(value);
					this.SendPropertyChanging();
					this._tanggal_pengembalian = value;
					this.SendPropertyChanged("tanggal_pengembalian");
					this.Ontanggal_pengembalianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_bayar", DbType="VarChar(255)")]
		public string total_bayar
		{
			get
			{
				return this._total_bayar;
			}
			set
			{
				if ((this._total_bayar != value))
				{
					this.Ontotal_bayarChanging(value);
					this.SendPropertyChanging();
					this._total_bayar = value;
					this.SendPropertyChanged("total_bayar");
					this.Ontotal_bayarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Akun_Pinjam", Storage="_Akun", ThisKey="akun_id", OtherKey="id", IsForeignKey=true)]
		public Akun Akun
		{
			get
			{
				return this._Akun.Entity;
			}
			set
			{
				Akun previousValue = this._Akun.Entity;
				if (((previousValue != value) 
							|| (this._Akun.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Akun.Entity = null;
						previousValue.Pinjams.Remove(this);
					}
					this._Akun.Entity = value;
					if ((value != null))
					{
						value.Pinjams.Add(this);
						this._akun_id = value.id;
					}
					else
					{
						this._akun_id = default(int);
					}
					this.SendPropertyChanged("Akun");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buku_Pinjam", Storage="_Buku", ThisKey="buku_id", OtherKey="id", IsForeignKey=true)]
		public Buku Buku
		{
			get
			{
				return this._Buku.Entity;
			}
			set
			{
				Buku previousValue = this._Buku.Entity;
				if (((previousValue != value) 
							|| (this._Buku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buku.Entity = null;
						previousValue.Pinjams.Remove(this);
					}
					this._Buku.Entity = value;
					if ((value != null))
					{
						value.Pinjams.Add(this);
						this._buku_id = value.id;
					}
					else
					{
						this._buku_id = default(int);
					}
					this.SendPropertyChanged("Buku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Akun")]
	public partial class Akun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<Pinjam> _Pinjams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Akun()
		{
			this._Pinjams = new EntitySet<Pinjam>(new Action<Pinjam>(this.attach_Pinjams), new Action<Pinjam>(this.detach_Pinjams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Akun_Pinjam", Storage="_Pinjams", ThisKey="id", OtherKey="akun_id")]
		public EntitySet<Pinjam> Pinjams
		{
			get
			{
				return this._Pinjams;
			}
			set
			{
				this._Pinjams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.Akun = this;
		}
		
		private void detach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.Akun = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buku")]
	public partial class Buku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _judul;
		
		private string _deskripsi;
		
		private int _penulis_id;
		
		private int _kategori_id;
		
		private EntitySet<Pinjam> _Pinjams;
		
		private EntityRef<Kategori> _Kategori;
		
		private EntityRef<Penuli> _Penuli;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnjudulChanging(string value);
    partial void OnjudulChanged();
    partial void OndeskripsiChanging(string value);
    partial void OndeskripsiChanged();
    partial void Onpenulis_idChanging(int value);
    partial void Onpenulis_idChanged();
    partial void Onkategori_idChanging(int value);
    partial void Onkategori_idChanged();
    #endregion
		
		public Buku()
		{
			this._Pinjams = new EntitySet<Pinjam>(new Action<Pinjam>(this.attach_Pinjams), new Action<Pinjam>(this.detach_Pinjams));
			this._Kategori = default(EntityRef<Kategori>);
			this._Penuli = default(EntityRef<Penuli>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_judul", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string judul
		{
			get
			{
				return this._judul;
			}
			set
			{
				if ((this._judul != value))
				{
					this.OnjudulChanging(value);
					this.SendPropertyChanging();
					this._judul = value;
					this.SendPropertyChanged("judul");
					this.OnjudulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deskripsi", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string deskripsi
		{
			get
			{
				return this._deskripsi;
			}
			set
			{
				if ((this._deskripsi != value))
				{
					this.OndeskripsiChanging(value);
					this.SendPropertyChanging();
					this._deskripsi = value;
					this.SendPropertyChanged("deskripsi");
					this.OndeskripsiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_penulis_id", DbType="Int NOT NULL")]
		public int penulis_id
		{
			get
			{
				return this._penulis_id;
			}
			set
			{
				if ((this._penulis_id != value))
				{
					if (this._Penuli.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpenulis_idChanging(value);
					this.SendPropertyChanging();
					this._penulis_id = value;
					this.SendPropertyChanged("penulis_id");
					this.Onpenulis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategori_id", DbType="Int NOT NULL")]
		public int kategori_id
		{
			get
			{
				return this._kategori_id;
			}
			set
			{
				if ((this._kategori_id != value))
				{
					if (this._Kategori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkategori_idChanging(value);
					this.SendPropertyChanging();
					this._kategori_id = value;
					this.SendPropertyChanged("kategori_id");
					this.Onkategori_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buku_Pinjam", Storage="_Pinjams", ThisKey="id", OtherKey="buku_id")]
		public EntitySet<Pinjam> Pinjams
		{
			get
			{
				return this._Pinjams;
			}
			set
			{
				this._Pinjams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Buku", Storage="_Kategori", ThisKey="kategori_id", OtherKey="id", IsForeignKey=true)]
		public Kategori Kategori
		{
			get
			{
				return this._Kategori.Entity;
			}
			set
			{
				Kategori previousValue = this._Kategori.Entity;
				if (((previousValue != value) 
							|| (this._Kategori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategori.Entity = null;
						previousValue.Bukus.Remove(this);
					}
					this._Kategori.Entity = value;
					if ((value != null))
					{
						value.Bukus.Add(this);
						this._kategori_id = value.id;
					}
					else
					{
						this._kategori_id = default(int);
					}
					this.SendPropertyChanged("Kategori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Penuli_Buku", Storage="_Penuli", ThisKey="penulis_id", OtherKey="id", IsForeignKey=true)]
		public Penuli Penuli
		{
			get
			{
				return this._Penuli.Entity;
			}
			set
			{
				Penuli previousValue = this._Penuli.Entity;
				if (((previousValue != value) 
							|| (this._Penuli.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Penuli.Entity = null;
						previousValue.Bukus.Remove(this);
					}
					this._Penuli.Entity = value;
					if ((value != null))
					{
						value.Bukus.Add(this);
						this._penulis_id = value.id;
					}
					else
					{
						this._penulis_id = default(int);
					}
					this.SendPropertyChanged("Penuli");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.Buku = this;
		}
		
		private void detach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.Buku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategori")]
	public partial class Kategori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nama;
		
		private EntitySet<Buku> _Bukus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    #endregion
		
		public Kategori()
		{
			this._Bukus = new EntitySet<Buku>(new Action<Buku>(this.attach_Bukus), new Action<Buku>(this.detach_Bukus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_Buku", Storage="_Bukus", ThisKey="id", OtherKey="kategori_id")]
		public EntitySet<Buku> Bukus
		{
			get
			{
				return this._Bukus;
			}
			set
			{
				this._Bukus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bukus(Buku entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = this;
		}
		
		private void detach_Bukus(Buku entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Penulis")]
	public partial class Penuli : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nama;
		
		private string _noTelp;
		
		private EntitySet<Buku> _Bukus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void OnnoTelpChanging(string value);
    partial void OnnoTelpChanged();
    #endregion
		
		public Penuli()
		{
			this._Bukus = new EntitySet<Buku>(new Action<Buku>(this.attach_Bukus), new Action<Buku>(this.detach_Bukus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noTelp", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string noTelp
		{
			get
			{
				return this._noTelp;
			}
			set
			{
				if ((this._noTelp != value))
				{
					this.OnnoTelpChanging(value);
					this.SendPropertyChanging();
					this._noTelp = value;
					this.SendPropertyChanged("noTelp");
					this.OnnoTelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Penuli_Buku", Storage="_Bukus", ThisKey="id", OtherKey="penulis_id")]
		public EntitySet<Buku> Bukus
		{
			get
			{
				return this._Bukus;
			}
			set
			{
				this._Bukus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bukus(Buku entity)
		{
			this.SendPropertyChanging();
			entity.Penuli = this;
		}
		
		private void detach_Bukus(Buku entity)
		{
			this.SendPropertyChanging();
			entity.Penuli = null;
		}
	}
}
#pragma warning restore 1591
